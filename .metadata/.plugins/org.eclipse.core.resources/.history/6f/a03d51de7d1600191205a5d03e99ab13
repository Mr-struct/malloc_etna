/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cours.process;

import com.cours.entities.Animal;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author elhad
 */
public class ProcessAnimal implements IProcessAnimal {

    private static final Log log = LogFactory.getLog(ProcessAnimal.class);
    private List<Animal> animals = null;
    private final DateFormat dateFormat = null;

    @Override
    public List<Animal> loadAnimalsManually() {
        //animals.clear();
        return animals;
    }

    @Override
    public List<Animal> loadAnimalsFile() {
    	File file = new File("animaux.txt");
    	FileReader fileReader  = null;
    	
        try {
        	fileReader = new FileReader(file.getAbsolutePath());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	BufferedReader buffer = new BufferedReader(fileReader);
    	String getLines = "";
    	try {
			while(buffer.readLine() != null) {
				getLines += buffer.readLine();
				String [] strTab = getLines.split(",");
				animals.add(new Animal(strTab[0].trim(),strTab[1].trim(), strTab[2].trim(),strTab[3].trim(), strTab[4].trim(), strTab[5].trim(), strTab[6].trim()));
			}
			System.out.println(getLines);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        return animals;
    }

    @Override
    public Double calculMoyennePoidsAnimaux() {
        double total = 0.0;

        return total;
    }

    @Override
    public Double calculEcartTypePoidsAnimaux() {
        return 0.0;
    }

    @Override
    public List<Animal> sortAnimalsById() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByName() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByWeight() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByColor() {
        return null;
    }

    @Override
    public void generateFileByName() {
    }

    @Override
    public void generateFileByWeight() {
    }

    @Override
    public List<Animal> getAnimals() {
        return animals;
    }
}
