/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cours.process;

import com.cours.entities.Animal;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author elhad
 */
public class ProcessAnimal implements IProcessAnimal {

    private static final Log log = LogFactory.getLog(ProcessAnimal.class);
    private List<Animal> animals = null;
    private final DateFormat dateFormat =  new SimpleDateFormat("dd/MM/yyyy");

    @Override
    public List<Animal> loadAnimalsManually() {
        //animals.clear();
        return animals;
    }

    @Override
    public List<Animal> loadAnimalsFile() {
    	File file = new File("animaux.txt");
    	FileReader fileReader  = null;
    	animals = new ArrayList<Animal>();
        try {
        	fileReader = new FileReader(file.getAbsolutePath());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	BufferedReader buffer = new BufferedReader(fileReader);
    	String getLines = "";
    	try {
			while(buffer.readLine() != null) {
				
//				getLines += buffer.readLine();
//				String [] strTab = getLines.split(",");
//				for(String st : strTab) {
//					System.out.println(st);
//				}
				
//					Date dateNaissance = dateFormat.parse(strTab[3].trim());
//				
//			animals.add(new Animal(Integer.parseInt(strTab[0].trim()),
//									strTab[1].trim(),
//									Integer.parseInt(strTab[2].trim()),
//									dateNaissance,
//									strTab[4].trim(),
//									Integer.parseInt(strTab[5].trim()),
//									Boolean.parseBoolean(strTab[6].trim())
//									));
//			
			}
		} catch (IOException e ) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	System.out.println(getLines);
    	
//    	for(Animal anim : animals) {
//    		System.out.println(anim.toString());
//    	}
        return animals;
    }

    @Override
    public Double calculMoyennePoidsAnimaux() {
        double total = 0.0;

        return total;
    }

    @Override
    public Double calculEcartTypePoidsAnimaux() {
        return 0.0;
    }

    @Override
    public List<Animal> sortAnimalsById() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByName() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByWeight() {
        return null;
    }

    @Override
    public List<Animal> sortAnimalsByColor() {
        return null;
    }

    @Override
    public void generateFileByName() {
    }

    @Override
    public void generateFileByWeight() {
    }

    @Override
    public List<Animal> getAnimals() {
        return animals;
    }
}
